{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Readme","text":"<p> <p>Create a full Earth Observation API with Metadata, Raster and Vector services.</p> </p> <p> </p> <p>Documentation: developmentseed.org/eoAPI/</p> <p>Source Code: developmentseed/eoAPI</p>"},{"location":"#earth-observation-api","title":"Earth Observation API","text":"<p><code>eoAPI</code> combines several state-of-the-art projects to create a full Earth Observation API. Each service can be used and deployed independently but <code>eoAPI</code> creates the interconnections between each service:</p> <ul> <li> <p>pgSTAC database stac-utils/pgstac</p> </li> <li> <p>STAC API built on top of stac-utils/stac-fastapi</p> </li> <li> <p>STAC Items And Mosaic Raster Tiles API built on top of stac-utils/titiler-pgstac</p> </li> <li> <p>OGC Features and Vector Tiles API built on top of developmentseed/tipg</p> </li> </ul>"},{"location":"#why-should-you-use-eoapi","title":"Why should you use <code>eoAPI</code>","text":"<ul> <li>Focus on your use case: <code>eoAPI</code>\u00a0is used for large-scale data processing, building geographic information systems (GIS), creating real-time data applications, climate research and environmental monitoring, machine learning model training, and more.</li> <li>Unified Repository: <code>eoAPI</code>\u00a0provides a single, unified repository to several state-of-the-art Earth Observation (EO) data services, including Metadata search (STAC), Raster, and Vector services. This can simplify the process of accessing and working with these services.</li> <li>Interoperability: <code>eoAPI</code>\u00a0is designed to enable interoperability among its included services. This can make building complex applications that leverage different types of EO data easier.</li> <li>Open Source and Community Support:\u00a0As an open-source project,\u00a0<code>eoAPI</code>\u00a0allows developers to inspect its code, contribute to its development, and use it as a base for custom solutions. It also benefits from the support and innovation of a community of developers and EO data users.</li> <li>Scalability and Flexibility:\u00a0Each service in\u00a0<code>eoAPI</code>\u00a0can be used or deployed independently, which provides a lot of flexibility. If a developer's application only requires one or two of eoAPI's services, they don't need to deploy the entire suite.</li> <li>Facilitate Earth Observation Tasks: <code>eoAPI</code>\u00a0includes specialized tools for working with EO data, such as dynamic tiling, metadata searching, and features/vector tiles API. These can significantly facilitate EO data processing, analysis, and visualization.</li> <li>Ease of Deployment: <code>eoAPI</code>\u00a0supports containerized deployment using Docker, making it easier to set up, scale, and maintain applications built on it. Spin up the demo locally and start experimenting in minutes.</li> </ul>"},{"location":"#services-overview","title":"Services Overview","text":"<ul> <li>STAC Metadata: Built with stac-fastapi.pgstac and extended with a custom extension to connect it to <code>TiTiler</code> and a Search Viewer. See docs for API details.</li> <li>Raster Tiles: Built with titiler-pgstac and pgstac to enable large scale mosaic based on results of STAC searches queries. See docs for API details.</li> <li>OGC Features &amp; Vector Tiles: Built with tipg to create a lightweight OGC Features and Tiles API with a PostGIS database. See docs for API details.</li> </ul> <p>See service details for more information. </p> <p>Note: The documentation links referenced require lauching the application with <code>docker-compose</code> or another deployment.</p>"},{"location":"#getting-started","title":"Getting started","text":"<ul> <li>Clone the repository: <code>git clone https://github.com/developmentseed/eoAPI.git</code></li> <li>Navigate to the project: <code>cd eoAPI</code></li> <li>Run services with <code>docker-compose up</code></li> <li>Follow the MAXAR open data demo (or get inspired by the other demos) to load some data into eoAPI</li> <li>Checkout the Search Viewer, and the API documentation (STAC Metadata, Raster Tiles, Vector Tiles)</li> </ul> <p>Alternatively, you may launch the application locally: <pre><code>python -m pip install --upgrade virtualenv\nvirtualenv .venv\nsource .venv/bin/activate\n\npython -m pip install \"psycopg[binary,pool]\" uvicorn\npython -m pip install runtime/eoapi/raster runtime/eoapi/stac runtime/eoapi/vector\n\nexport DATABASE_URL=postgresql://username:password@0.0.0.0:5439/postgis  # Connect to the database of your choice\n\n# OGC Features/Tiles\n.venv/bin/uvicorn eoapi.vector.app:app --port 8000 --reload\n\n# Raster\n.venv/bin/uvicorn eoapi.raster.app:app --port 8000 --reload\n\n# STAC\n.venv/bin/uvicorn eoapi.stac.app:app --port 8000 --reload\n</code></pre></p>"},{"location":"#deployment","title":"Deployment","text":"<p>See DEPLOYMENT.md</p>"},{"location":"#contribution-development","title":"Contribution &amp; Development","text":"<p>See CONTRIBUTING.md</p>"},{"location":"#license","title":"License","text":"<p>See LICENSE</p>"},{"location":"#authors","title":"Authors","text":"<p>Created by Development Seed</p> <p>See contributors for a listing of individual contributors.</p>"},{"location":"#changes","title":"Changes","text":"<p>See CHANGES.md.</p>"},{"location":"contributing/","title":"Development - Contributing","text":"<p>Issues and pull requests are more than welcome: github.com/developmentseed/eoAPI/issues</p> <p>dev install</p> <pre><code># Download the code\ngit clone https://github.com/developmentseed/eoAPI.git\ncd eoAPI\n\n# Create a virtual environment\npython -m pip install --upgrade virtualenv\nvirtualenv .venv\nsource .venv/bin/activate\n\n# Install eoapi modules\npython -m pip install \"psycopg[binary,pool]\"\npython -m pip install -e runtime/eoapi/raster[\"test\"] -e runtime/eoapi/stac[\"test\"] -e runtime/eoapi/vector[\"test\"]\n</code></pre> <p>pre-commit</p> <p>This repo is set to use <code>pre-commit</code> to run isort, ruff, pydocstring, black (\"uncompromising Python code formatter\") and mypy when committing new code.</p> <pre><code>$ pre-commit install\n</code></pre>"},{"location":"release-notes/","title":"Release Notes","text":""},{"location":"release-notes/#010-tbd","title":"0.1.0 (TBD)","text":"<p>Initial release</p>"},{"location":"services-details/","title":"Services Details","text":""},{"location":"services-details/#services-details","title":"Services Details","text":""},{"location":"services-details/#stac-metadata","title":"STAC Metadata","text":"<p>A custom version of stac-fastapi.pgstac application, adding a <code>TiTilerExtension</code> and a simple <code>Search Viewer</code>.</p> <p>The service includes:</p> <ul> <li> <p>Full stac-fastapi implementation - see docs if using the <code>docker-compose</code> configuration.</p> </li> <li> <p>Simple STAC Search viewer - see viewer if using the <code>docker-compose</code> configuration.</p> </li> <li> <p>Proxy to the Tiler endpoint for STAC Items</p> </li> </ul> <p>When <code>TITILER_ENDPOINT</code> environement is set (pointing the <code>raster</code> application), additional endpoints will be added to the stac-fastapi application (see: stac/extension.py):</p> <ul> <li><code>/collections/{collectionId}/items/{itemId}/tilejson.json</code>: Return the <code>raster</code> tilejson for an item</li> <li><code>/collections/{collectionId}/items/{itemId}/viewer</code>: Redirect to the <code>raster</code> viewer</li> </ul> <p> <p>STAC Search viewer</p> </p> <p>Code: /runtime/eoapi/stac</p>"},{"location":"services-details/#raster-tiles","title":"Raster Tiles","text":"<p>The dynamic tiler deployed within eoAPI is built on top of titiler-pgstac and pgstac. It enables large scale mosaic based on results of STAC searches queries.</p> <p>See docs if using the <code>docker-compose</code> configuration.</p> <p>The service includes:</p> <ul> <li>Full titiler-pgstac implementation</li> </ul> <p> <p>TiTiler-PgSTAC workflow</p> </p> <p>Code: /runtime/eoapi/raster</p>"},{"location":"services-details/#ogc-features-vector-tiles","title":"OGC Features / Vector Tiles","text":"<p>OGC Features + Tiles API built on top of tipg.</p> <p>By default, the API will look for tables in the <code>public</code> schema of the database. We've also added three custom functions which connect to the pgSTAC schema.</p> <p>See docs if using the <code>docker-compose</code> configuration.</p> <ul> <li>pg_temp.pgstac_collections_view: Simple function which return PgSTAC Collections</li> <li>pg_temp.pgstac_hash: Return features for a specific searchId (hash)</li> <li>pg_temp.pgstac_hash_count: Return the number of items per geometry for a specific searchId (hash)</li> </ul> <p>Code: /runtime/eoapi/vector</p>"}]}